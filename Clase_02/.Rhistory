set.seed(1) #semilla para fijar resultados cada vez que se corre la simulación
Animal <- seq(1:100)
Talla <- rnorm(100, 77, 5)
Peso <- rnorm(100, 6078, 1190)
Sexo <- sample(c("Hembra","Macho"), size = 100, replace = TRUE)
datos <- data.frame(Animal, Talla, Peso, Sexo)
density(datos$Talla)
plot(density(datos$Talla))
set.seed(1) #semilla para fijar resultados cada vez que se corre la simulación
Animal <- seq(1:1000)
Talla <- rnorm(1000, 77, 5)
Peso <- rnorm(1000, 6078, 1190)
Sexo <- sample(c("Hembra","Macho"), size = 1000, replace = TRUE)
datos <- data.frame(Animal, Talla, Peso, Sexo)
density(datos$Talla)
plot(density(datos$Talla))
plot(density(datosPeso))
plot(density(datos$Peso))
View(datos)
density(datos$Talla)
densidad <- density(datos$Talla)
plot(ddensidad)
plot(densidad)
# Predicción densidad
Fn <- ecdf(datos$Talla)
Fn
plot(Fn)
Fn(6078)*100
# Proporción de animales bajo 6078
Fn(77)*100
1-Fn(70)*100
# Proporción de animales bajo 70 cm
Fn(70)*100
(1-Fn(70))*100
knitr::opts_chunk$set(echo = FALSE)
library(MASS)
library(psych)
library(knitr)
library(Rlab)
library(ggplot2)
library(readxl)
knitr::include_graphics("Normal.png")
knitr::opts_chunk$set(echo = FALSE)
library(MASS)
library(psych)
library(knitr)
library(Rlab)
library(ggplot2)
library(readxl)
q2<-rnorm(100000, 0, 1)
plot(ecdf(q2),main= "Función de distribución empírica acumulada", col="red", cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
q2<-rnorm(100000, 0, 1)
plot(ecdf(q2),main= "Distribución empírica acumulada.", col="red", cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5, xlab="Probabilidad", ylab = "Variable estandarizada (media=0, sd=1)")
q2<-rnorm(100000, 0, 1)
plot(ecdf(q2),main= "Distribución empírica acumulada.", col="red", cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5, ylab="Probabilidad", xlab = "Variable estandarizada (media=0, sd=1)")
par(mfrow=c(1,2))
set.seed(123)
q<-rnorm(50, 0, 1)
hist(q, col="red", main = "Histograma n= 50", xlab = "Variable cuantitativa continua", cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5, )
q1<-rnorm(10000, 0, 1)
hist(q1, col="red", main = "Histograma n= 10000", xlab = "Variable cuantitativa continua", cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5, )
par(mfrow=c(1,2))
set.seed(123)
q<-rnorm(50, 0, 1)
hist(q, col="red", main = "Histograma n= 50", xlab = "Variable estandarizada", cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5, )
q1<-rnorm(10000, 0, 1)
hist(q1, col="red", main = "Histograma n= 10000", xlab = "Variable estandarizada", cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5, )
par(mfrow=c(1,2))
set.seed(123)
q<-rnorm(50, 0, 1)
hist(q, col="red", main = "n= 50", xlab = "Variable estandarizada", cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5, )
q1<-rnorm(10000, 0, 1)
hist(q1, col="red", main = "n= 10000", xlab = "Variable estandarizada", cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5, )
# ¿Cómo habilitar librerías?
library(xlsx)
library(readr)
library(readxl)
# ¿Qué tipos de distribuciones hay en R?
help(Distributions)
# ¿Cómo importar datos datos a R? (Formatos .txt, .csv, .xlsx)
# Importa base de datos en formato .txt
datos_txt <- read.delim("/cloud/project/Clase_02/datos.txt")
# Importa base de datos en formato .csv
datos_csv <- read_csv("/cloud/project/Clase_02/datos.csv")
# Importa base de datos en formato .xlsx
datos_xlsx <- read_excel("/cloud/project/Clase_02/datos.xlsx")
# Simular base de datos con variable aleatoria continua con distribución normal paso a paso
set.seed(1) #semilla para fijar resultados cada vez que se corre la simulación
Animal <- seq(1:1000)
Talla <- rnorm(1000, 77, 5)
Peso <- rnorm(1000, 6078, 1190)
Sexo <- sample(c("Hembra","Macho"), size = 1000, replace = TRUE)
datos <- data.frame(Animal, Talla, Peso, Sexo)
# Explore el objeto datos con summary()
# Observe (grafique) las variables aleatorias cuantitativas continuas talla y peso con hist() y boxplot()
# Densidad
density(datos$Talla)
densidad <- density(datos$Talla)
plot(densidad)
# Densidad acumulada
Fn <- ecdf(datos$Talla)
Fn
plot(Fn)
# Proporción de animales bajo 70 cm
Fn(70)*100
# Proporción de animales sobre 70 cm
(1-Fn(70))*100
# Proporción deentro de un intervalo
(1-Fn(70))*100
# Respuesta a ejercicios
summary(datos)
hist(datos$Peso)
boxplot(datos$Peso ~ datos$Sexo)
plot(density(datos$Talla))
plot(ecdf(datos$Peso))
datos <- as.data.frame(Sexo=rep(rep(c("Hembra","Macho"), each=10), 2),
Peso=c(rnorm(10, 4.5, 1), rnorm(10, 5.5, 1)))
datos <- as.data.frame(Sexo=rep(c("Hembra","Macho"), each=10),
Peso=c(rnorm(10, 4.5, 1), rnorm(10, 5.5, 1)))
datos <- as.data.frame(Sexo=rep(c("Hembra","Macho"), each=10))
datos <- as.data.frame(Sexo=c("Hembra","Macho"))
datos <- data.frame(Sexo=c("Hembra","Macho"))
View(datos)
datos <- data.frame((Sexo=rep(c("Hembra","Macho"), each=10))
datos <- data.frame((Sexo=rep(c("Hembra","Macho"), each=10)))
View(datos)
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=10)))
View(datos)
rnorm(10, 4.5, 1) # 10 animales, media=4,5 Kg, ds=1 Kg
help(rep)
rep(c("Hembra","Macho"), each=10))
rep(c("Hembra","Macho"), each=10)
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=10))),
Peso=c(rnorm(10, 4.5, 1), rnorm(10, 5.5, 1))
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=10)),
Peso=c(rnorm(10, 4.5, 1), rnorm(10, 5.5, 1))
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=10)),
Peso=c(rnorm(10, 4.5, 1), rnorm(10, 5.5, 1)))
View(datos)
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=10)),
Peso=c(rnorm(10, 4.5, 0.5), rnorm(10, 5.5, 0.5)))
View(datos)
# Observe densidad con density()
densidad <- density(datos$Peso)
plot(densidad)
# Unimos
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=10)),
Peso=c(rnorm(10, 4, 0.5), rnorm(10, 5.5, 0.5)))
# Observe densidad con density()
densidad <- density(datos$Peso)
plot(densidad)
# Unimos
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=10)),
Peso=c(rnorm(10, 4, 0.5), rnorm(10, 5, 0.5)))
# Observe densidad con density()
densidad <- density(datos$Peso)
plot(densidad)
# Unimos
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=10)),
Peso=c(rnorm(10, 4, 0.5), rnorm(10, 5.5, 0.5)))
# Observe densidad con density()
densidad <- density(datos$Peso)
plot(densidad)
# Unimos
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=10)),
Peso=c(rnorm(10, 4, 0.5), rnorm(10, 5.5, 0.5)))
# Observe densidad con density()
densidad <- density(datos$Peso)
plot(densidad)
# Simular base de datos con variable aleatoria continua y distribución normal paso a paso
set.seed(1) #semilla para fijar resultados cada vez que se corre la simulación
# Simula variable aleatoria peso salmón
help(rnorm)
rnorm(10, 4.5, 0.5) # 10 animales, media=4,5 Kg, ds=1 Kg
# Simula variable aleatoria Sexo
help(rep)
rep(c("Hembra","Macho"), each=10)
# Unimos
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=10)),
Peso=c(rnorm(10, 4, 0.5), rnorm(10, 5.5, 0.5)))
# Observe densidad con density()
densidad <- density(datos$Peso)
plot(densidad)
# Unimos
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=10)),
Peso=c(rnorm(10, 4, 0.5), rnorm(10, 5.5, 0.5)))
# Observe densidad con density()
densidad <- density(datos$Peso)
plot(densidad)
# Unimos
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=10)),
Peso=c(rnorm(10, 4, 0.5), rnorm(10, 5.5, 0.5)))
# Observe densidad con density()
densidad <- density(datos$Peso)
plot(densidad)
rep(c("Hembra","Macho"), each=100)
# Unimos
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=10)),
Peso=c(rnorm(100, 4, 0.5), rnorm(100, 5.5, 0.5)))
# Observe densidad con density()
densidad <- density(datos$Peso)
plot(densidad)
# Simula variable aleatoria peso salmón
help(rnorm)
set.seed(1)
rnorm(10, 4.5, 0.5) # 10 animales, media=4,5 Kg, ds=1 Kg
# Simula variable aleatoria Sexo
help(rep)
set.seed(1)
rep(c("Hembra","Macho"), each=100)
# Unimos
set.seed(1)
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=10)),
Peso=c(rnorm(100, 4, 0.5), rnorm(100, 5.5, 0.5)))
# Observe densidad con density()
densidad <- density(datos$Peso)
plot(densidad)
data_hembras <- datos[datos$Sexo=="Hembra",]
View(data_hembras)
# Densidad acumulada de hembras
Fn <- ecdf(datos_hembras)
# Filtrar por sexo antes de predecir
datos_hembras <- datos[datos$Sexo=="Hembra",]
# Densidad acumulada de hembras
Fn <- ecdf(datos_hembras)
# Densidad acumulada de hembras
Fn <- ecdf(datos_hembras$Peso)
Fn
plot(Fn)
# Densidad acumulada de hembras
density(datos_hembras$Peso)
# Densidad acumulada de hembras
plot(density(datos_hembras$Peso))
View(data_hembras)
hist(datos_hembras$Peso)
boxplot(datos$Peso ~ datos$Sexo)
datos <- data.frame(Sexo=(rep(c("Hembra","Macho"), each=100)),
Peso=c(rnorm(100, 4, 0.5), rnorm(100, 5.5, 0.5)))
boxplot(datos$Peso ~ datos$Sexo)
# Observe densidad con density()
densidad <- density(datos$Peso)
plot(densidad)
# Filtrar por sexo antes de predecir
datos_hembras <- datos[datos$Sexo=="Hembra",]
# Densidad acumulada de hembras
hist(datos_hembras$Peso)
Fn <- ecdf(datos_hembras$Peso)
Fn
plot(Fn)
density(datos_hembras$Peso)
plot(density(datos_hembras$Peso))
Fn <- ecdf(datos_hembras$Peso)
Fn
plot(Fn)
# Proporción de hembras bajo 5 kg
Fn(5)*100
# Proporción de hembras sobre 5 kg
(1-Fn(5))*100
# Histograma y densidad de peso de hembras
hist(datos_hembras$Peso)
plot(density(datos_hembras$Peso))
# Densidad acumulada de hembras
Fn <- ecdf(datos_hembras$Peso)
Fn
plot(Fn)
# Proporción de hembras bajo 5 kg
Fn(5)*100
# Proporción de hembras sobre 5 kg
(1-Fn(5))*100
Fn(mean(datos_hembras$Peso) + sd(datos_hembras$Peso))
# Proporción 1 desviasión estandar sobre la media
1 - Fn(mean(datos_hembras$Peso) + sd(datos_hembras$Peso))
1 - Fn(mean(datos_hembras$Peso) - sd(datos_hembras$Peso))
Fn(mean(datos_hembras$Peso) - sd(datos_hembras$Peso))
# Respuesta a ejercicios
summary(datos)
hist(datos$Peso)
boxplot(datos$Peso ~ datos$Sexo)
densidad <- density(datos$Peso)
plot(densidad)
# Ejercicio 2 - calcule proporción de datos 1 desviación estándar sobre la media
(1-Fn(mean(datos_hembras$Peso) + sd(datos_hembras$Peso)))*100
ds_sobre <- (1-Fn(mean(datos_hembras$Peso) + sd(datos_hembras$Peso)))*100
ds_sobre
ds_bajo <- Fn(mean(datos_hembras$Peso) + sd(datos_hembras$Peso))*100
ds_bajo
ds_bajo <- Fn(mean(datos_hembras$Peso) - sd(datos_hembras$Peso))*100
ds_bajo
100-(ds_sobre+ds_bajo)
# Proporción de datos 1 desviación estándar bajo la media
Fn(mean(datos_hembras$Peso) - sd(datos_hembras$Peso)
# Proporción de datos 1 desviación estándar bajo la media
Fn(mean(datos_hembras$Peso) - sd(datos_hembras$Peso))
# Proporción de datos 1 desviación estándar bajo la media
Fn(mean(datos_hembras$Peso) - sd(datos_hembras$Peso))
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
salmones <- read_excel("Salmon_Data.xlsx")
head(salmones)
tail(salmones)
str(salmones)
summary(salmones)
salmones$Population <- as.factor(salmones$Population)
salmones$Family <- as.factor(salmones$Family)
salmones$`Net pen` <- as.factor(salmones$`Net pen`)
summary(salmones)
str(salmones)
par(mfrow=c(1,2))
hist(salmones$`Weight (g)`, col="deepskyblue4", main = "Histograma Peso", xlab = "Peso (g)")
boxplot(salmones$`Weight (g)`, col="deepskyblue4", main = "Boxplot Peso", ylab = "Peso (g)")
mean(salmones$`Weight (g)`)
sd(salmones$`Weight (g)`)
range(ssalmones$`Weight (g)`)
mean(salmones$`Weight (g)`)
sd(salmones$`Weight (g)`)
range(salmones$`Weight (g)`)
quantile(salmones$`Weight (g)`)
# Densidad empírica.
plot(density(salmones$`Weight (g)`), main="Densidad empírica", xlab="Peso (g)")
# Distribución acumulada empírica.
plot(ecdf(salmones$`Weight (g)`), main="Distribución acumulada empírica", xlab="Peso (g)")
Fn <- ecdf(ssalmones$`Weight (g)`)
Fn <- ecdf(salmones$`Weight (g)`)
Fn
# Fn(x) returns the percentiles for x
paste("La proporción de animales menores a 1000 g es = ", Fn(1000)*100, "%")
# 1- Fn(x) returns 1 - the percentiles for x
paste("La proporción de animales mayores a 2000 g es = ", ((1 - Fn(2000))*100), "%")
plot(density(salmones$Peso), main="Densidad empírica", xlab="Peso (g)")
plot(density(salmones$`Weight (g)`, main="Densidad empírica", xlab="Peso (g)")
abline(v=mean(salmones$`Weight (g)`)+sd(salmones$`Weight (g)`), col="red", lwd=2)
plot(density(salmones$`Weight (g)`), main="Densidad empírica", xlab="Peso (g)")
abline(v=mean(salmones$`Weight (g)`)+sd(salmones$`Weight (g)`), col="red", lwd=2)
abline(v=5864 - 1171, col="red", lwd=2)
abline(v=5864, col="blue", lwd=2)
plot(density(salmones$`Weight (g)`), main="Densidad empírica", xlab="Peso (g)")
abline(v=mean(salmones$`Weight (g)`)+sd(salmones$`Weight (g)`), col="red", lwd=2)
abline(v=mean(salmones$`Weight (g)`)-sd(salmones$`Weight (g)`), col="red", lwd=2)
abline(v=mean(salmones$`Weight (g)`), col="blue", lwd=2)
p1 <- 1 - Fn(mean(salmones$`Weight (g)`)+sd(salmones$`Weight (g)`))
p1
p1 <- (1 - Fn(mean(salmones$`Weight (g)`)+sd(salmones$`Weight (g)`)))*100
p1
p2 <- (Fn(mean(salmones$`Weight (g)`)-sd(salmones$`Weight (g)`)))*100
p2
paste(((1 - (p1 + p2))*100), "%")
# Este valor es muy cercano al 71% teórico de una variable con distribución normal.
paste(((100 - (p1 + p2))*100), "%")
# Este valor es muy cercano al 71% teórico de una variable con distribución normal.
paste(((100 - (p1 + p2))), "%")
# Este valor es muy cercano al 71% teórico de una variable con distribución normal.
View(salmones)
boxplot(salmones$`Weight (g)` ~ salmones$Family, col="light blue", main = "Peso: Machos v/s Hembras", ylab = "Peso (g)", xlab = "Sexo")
boxplot(salmones$`Weight (g)` ~ salmones$`Net pen`, col="light blue", main = "Peso: Machos v/s Hembras", ylab = "Peso (g)", xlab = "Sexo")
boxplot(salmones$`Weight (g)` ~ salmones$`Net pen`, col="light blue", main = "Peso: por Jaula", ylab = "Peso (g)", xlab = "Jaulas")
Datos <- data.frame(rnegbin(1000, 10, 30))
colnames(Datos) <- "parasitos"
ggplot(Datos, aes(parasitos))+
geom_bar(color="white", fill="blue")+
labs(x="Parásitos", y="Frecuencia")+
scale_x_discrete(limits=0:37, labels = 0:37)
dbinom(x,12,0.5)
x <- 0:12
dbinom(x,12,0.5)
rbinom(100,8,0.5)
Caligus <- data.frame(rnegbin(1000, 10, 30))
library(MASS)
Caligus <- data.frame(rnegbin(1000, 10, 30))
View(Caligus)
table(Caligus)
Caligus <- data.frame(rnegbin(1000, 5, 30))
table(Caligus)
Caligus <- data.frame(rnegbin(1000, 3, 30))
table(Caligus)
barplot(table(Caligus),col = "coral",ylim = c(0,0.3),names.arg=x, main="Distribución Binomial")
dat <- table(Caligus)
dat <- as.data.frame(table(Caligus))
View(dat)
barplot(dat,col = "coral",ylim = c(0,0.3),names.arg=x, main="Distribución Binomial")
barplot(dat,col = "coral",ylim = c(0,0.3),names.arg=x, main="Distribución Binomial")
barplot(dat$Freq,col = "coral",ylim = c(0,0.3),names.arg=x, main="Distribución Binomial")
barplot(dat$Freq,col = "coral", main="Distribución Binomial")
barplot(dat$Freq,col = "coral",names.arg=dat$rnegbin.1000..3..30., main="Distribución Binomial")
dat <- as.data.frame(table(Caligus), col.names = c("Abundancia parasitos","Frecuencia"))
barplot(dat$Freq,col = "coral",names.arg=dat$rnegbin.1000..3..30., main="Distribución Binomial")
View(dat)
dat <- as.data.frame(table(Caligus), col.names = c("Abundancia parasitos","Frecuencia"))
View(dat)
dat <- as.data.frame(table(Caligus), col.names = names("Abundancia parasitos","Frecuencia"))
View(dat)
dat <- as.data.frame(table(Caligus))
colnames(dat) <- c("Abundancia parasitos","Frecuencia")
View(dat)
barplot(dat$Freq,col = "coral",names.arg=dat$`Abundancia parasitos`, main="Distribución Binomial")
barplot(dat$Frecuencia, col = "coral", names.arg=dat$`Abundancia parasitos`, main="Distribución Binomial")
Caligus <- data.frame(rnegbin(500, 3, 10))
dat <- as.data.frame(table(Caligus))
colnames(dat) <- c("Abundancia parasitos","Frecuencia")
barplot(dat$Frecuencia, col = "coral", names.arg=dat$`Abundancia parasitos`, main="Abundancia de parásitos.")
View(Caligus)
Caligus <- data.frame(rnegbin(1000, 10, 30))
View(Caligus)
dat <- as.data.frame(table(Caligus))
View(dat)
Caligus <- data.frame(rnegbin(500, 3, 10))
dat <- as.data.frame(table(Caligus))
View(dat)
colnames(dat) <- c("Abundancia parasitos","Frecuencia")
barplot(dat$Frecuencia, col = "coral", names.arg=dat$`Abundancia parasitos`, main="Abundancia de parásitos.")
Caligus <- data.frame(rnegbin(1000, 10, 30))
dat <- as.data.frame(table(Caligus))
colnames(dat) <- c("Abundancia parasitos","Frecuencia")
barplot(dat$Frecuencia, col = "coral", names.arg=dat$`Abundancia parasitos`, main="Abundancia de parásitos.")
# Habilita paquetes para importar/exportar datos
library(readr)
library(readxl)
write_delim(x = datos_all, file = "datos_all.txt", delim = ";")
set.seed(1)
Animal <- seq(1:100)
Madurez <- rbern(100, 0.65)
inf_caligus <- rbinom(100,8,0.6)
Sexo <- sample(c("Hembra","Macho"), size = 100, replace = TRUE)
Nivel_cataratas <- sample(c("Alto","Medio","Bajo"), size = 100, replace = TRUE)
datos_all <- data.frame(Animal,Madurez, inf_caligus, Sexo, Nivel_cataratas)
datos_all <- data.frame(Animal,Madurez, inf_caligus, Sexo, Nivel_cataratas)
Madurez <- rbern(100, 0.65)
# Habilita paquetes para simular algunas variables aletaorias
library(Rlab)
library(MASS)
# Simula experimento de colectar un camarón desde una granja en Bangladesh.
# Resultados posible: 0= sin virus; 1= con virus
rbern(1, 0.80)
Madurez <- rbern(100, 0.65)
datos_all <- data.frame(Animal,Madurez, inf_caligus, Sexo, Nivel_cataratas)
write_delim(x = datos_all, file = "datos_all.txt", delim = ";")
write_csv(x = datos_all, file = "datos_all.csv", delim = "," )
write_csv(x = datos_all, file = "datos_all.csv")
write.xlsx(datos_all, "datos_all.xlsx", sheetName = "Base_datos", col.names = TRUE, row.names = FALSE)
library(readxl)
write.xlsx(datos_all, "datos_all.xlsx", sheetName = "Base_datos", col.names = TRUE, row.names = FALSE)
library(xlsx)
write.xlsx(datos_all, "datos_all.xlsx", sheetName = "Base_datos", col.names = TRUE, row.names = FALSE)
datos_all$Madurez <- as.factor(datos_all$Madurez)
datos_all$inf_caligus <- as.factor(datos_all$inf_caligus)
datos_all$Sexo <- as.factor(datos_all$Sexo)
datos_all$Nivel_cataratas <- as.factor(datos_all$Nivel_cataratas)
summary(datos_all)
table(datos_all$Madurez, datos_all$Sexo)
table(datos_all$inf_caligus, datos_all$Sexo)
table(datos_all$Nivel_cataratas, datos_all$Sexo)
madurez_resumen <- table(datos_all$Madurez)
barplot(madurez_resumen)
caligus_resumen <- table(datos_all$inf_caligus)
barplot(caligus_resumen)
cataratas_resumen <- table(datos_all$Nivel_cataratas)
barplot(cataratas_resumen)
